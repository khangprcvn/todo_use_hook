{"id":"components/count-context.js","dependencies":[{"name":"E:\\Project\\LearnStuff\\react-stuff\\package.json","includedInParent":true,"mtime":1569337705745},{"name":"react","loc":{"line":1,"column":68},"parent":"E:\\Project\\LearnStuff\\react-stuff\\src\\components\\count-context.js","resolved":"E:\\Project\\LearnStuff\\react-stuff\\node_modules\\react\\index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CountProvider = CountProvider;\nexports.useCount = useCount;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nvar CountContext = (0, _react.createContext)();\n\nfunction useCount() {\n  var context = (0, _react.useContext)(CountContext);\n\n  if (!context) {\n    throw new Error(\"useCount must be used within a CountProvider\");\n  }\n\n  return context;\n}\n\nfunction CountProvider(props) {\n  var _useState = (0, _react.useState)(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      count = _useState2[0],\n      setCount = _useState2[1];\n\n  var value = (0, _react.useMemo)(function () {\n    return [count, setCount];\n  }, [count]);\n  return _react.default.createElement(CountContext.Provider, _extends({\n    value: value\n  }, props));\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":9,"column":0},"source":"components/count-context.js","original":{"line":1,"column":0}},{"generated":{"line":25,"column":0},"source":"components/count-context.js","original":{"line":3,"column":0}},{"name":"CountContext","generated":{"line":25,"column":4},"source":"components/count-context.js","original":{"line":3,"column":6}},{"generated":{"line":25,"column":16},"source":"components/count-context.js","original":{"line":3,"column":18}},{"generated":{"line":25,"column":19},"source":"components/count-context.js","original":{"line":3,"column":21}},{"generated":{"line":25,"column":46},"source":"components/count-context.js","original":{"line":3,"column":0}},{"generated":{"line":27,"column":0},"source":"components/count-context.js","original":{"line":5,"column":0}},{"name":"useCount","generated":{"line":27,"column":9},"source":"components/count-context.js","original":{"line":5,"column":9}},{"generated":{"line":27,"column":17},"source":"components/count-context.js","original":{"line":5,"column":0}},{"generated":{"line":27,"column":20},"source":"components/count-context.js","original":{"line":5,"column":20}},{"generated":{"line":28,"column":0},"source":"components/count-context.js","original":{"line":6,"column":2}},{"name":"context","generated":{"line":28,"column":6},"source":"components/count-context.js","original":{"line":6,"column":8}},{"generated":{"line":28,"column":13},"source":"components/count-context.js","original":{"line":6,"column":15}},{"generated":{"line":28,"column":16},"source":"components/count-context.js","original":{"line":6,"column":18}},{"name":"CountContext","generated":{"line":28,"column":39},"source":"components/count-context.js","original":{"line":6,"column":29}},{"generated":{"line":28,"column":51},"source":"components/count-context.js","original":{"line":6,"column":18}},{"generated":{"line":28,"column":52},"source":"components/count-context.js","original":{"line":6,"column":2}},{"generated":{"line":30,"column":0},"source":"components/count-context.js","original":{"line":7,"column":2}},{"generated":{"line":30,"column":6},"source":"components/count-context.js","original":{"line":7,"column":6}},{"name":"context","generated":{"line":30,"column":7},"source":"components/count-context.js","original":{"line":7,"column":7}},{"generated":{"line":30,"column":14},"source":"components/count-context.js","original":{"line":7,"column":2}},{"generated":{"line":30,"column":16},"source":"components/count-context.js","original":{"line":7,"column":16}},{"generated":{"line":31,"column":0},"source":"components/count-context.js","original":{"line":8,"column":4}},{"generated":{"line":31,"column":10},"source":"components/count-context.js","original":{"line":8,"column":10}},{"name":"Error","generated":{"line":31,"column":14},"source":"components/count-context.js","original":{"line":8,"column":14}},{"generated":{"line":31,"column":19},"source":"components/count-context.js","original":{"line":8,"column":10}},{"generated":{"line":31,"column":67},"source":"components/count-context.js","original":{"line":8,"column":4}},{"generated":{"line":32,"column":0},"source":"components/count-context.js","original":{"line":9,"column":3}},{"generated":{"line":34,"column":0},"source":"components/count-context.js","original":{"line":10,"column":2}},{"name":"context","generated":{"line":34,"column":9},"source":"components/count-context.js","original":{"line":10,"column":9}},{"generated":{"line":34,"column":16},"source":"components/count-context.js","original":{"line":10,"column":2}},{"generated":{"line":35,"column":0},"source":"components/count-context.js","original":{"line":11,"column":1}},{"generated":{"line":37,"column":0},"source":"components/count-context.js","original":{"line":13,"column":0}},{"name":"CountProvider","generated":{"line":37,"column":9},"source":"components/count-context.js","original":{"line":13,"column":9}},{"generated":{"line":37,"column":22},"source":"components/count-context.js","original":{"line":13,"column":0}},{"name":"props","generated":{"line":37,"column":23},"source":"components/count-context.js","original":{"line":13,"column":23}},{"generated":{"line":37,"column":28},"source":"components/count-context.js","original":{"line":13,"column":0}},{"generated":{"line":37,"column":30},"source":"components/count-context.js","original":{"line":13,"column":30}},{"generated":{"line":38,"column":0},"source":"components/count-context.js","original":{"line":13,"column":30}},{"generated":{"line":38,"column":18},"source":"components/count-context.js","original":{"line":14,"column":28}},{"generated":{"line":38,"column":39},"source":"components/count-context.js","original":{"line":14,"column":37}},{"generated":{"line":38,"column":40},"source":"components/count-context.js","original":{"line":14,"column":28}},{"generated":{"line":38,"column":41},"source":"components/count-context.js","original":{"line":13,"column":30}},{"generated":{"line":39,"column":0},"source":"components/count-context.js","original":{"line":13,"column":30}},{"generated":{"line":40,"column":0},"source":"components/count-context.js","original":{"line":13,"column":30}},{"name":"count","generated":{"line":40,"column":6},"source":"components/count-context.js","original":{"line":14,"column":9}},{"generated":{"line":40,"column":11},"source":"components/count-context.js","original":{"line":13,"column":30}},{"generated":{"line":41,"column":0},"source":"components/count-context.js","original":{"line":13,"column":30}},{"name":"setCount","generated":{"line":41,"column":6},"source":"components/count-context.js","original":{"line":14,"column":16}},{"generated":{"line":41,"column":14},"source":"components/count-context.js","original":{"line":13,"column":30}},{"generated":{"line":43,"column":0},"source":"components/count-context.js","original":{"line":15,"column":2}},{"name":"value","generated":{"line":43,"column":6},"source":"components/count-context.js","original":{"line":15,"column":8}},{"generated":{"line":43,"column":11},"source":"components/count-context.js","original":{"line":15,"column":13}},{"generated":{"line":43,"column":14},"source":"components/count-context.js","original":{"line":15,"column":16}},{"generated":{"line":43,"column":34},"source":"components/count-context.js","original":{"line":15,"column":24}},{"generated":{"line":44,"column":0},"source":"components/count-context.js","original":{"line":15,"column":24}},{"generated":{"line":44,"column":11},"source":"components/count-context.js","original":{"line":15,"column":30}},{"name":"count","generated":{"line":44,"column":12},"source":"components/count-context.js","original":{"line":15,"column":31}},{"generated":{"line":44,"column":17},"source":"components/count-context.js","original":{"line":15,"column":30}},{"name":"setCount","generated":{"line":44,"column":19},"source":"components/count-context.js","original":{"line":15,"column":38}},{"generated":{"line":44,"column":27},"source":"components/count-context.js","original":{"line":15,"column":30}},{"generated":{"line":44,"column":28},"source":"components/count-context.js","original":{"line":15,"column":24}},{"generated":{"line":45,"column":0},"source":"components/count-context.js","original":{"line":15,"column":24}},{"generated":{"line":45,"column":3},"source":"components/count-context.js","original":{"line":15,"column":16}},{"generated":{"line":45,"column":5},"source":"components/count-context.js","original":{"line":15,"column":49}},{"name":"count","generated":{"line":45,"column":6},"source":"components/count-context.js","original":{"line":15,"column":50}},{"generated":{"line":45,"column":11},"source":"components/count-context.js","original":{"line":15,"column":49}},{"generated":{"line":45,"column":12},"source":"components/count-context.js","original":{"line":15,"column":16}},{"generated":{"line":45,"column":13},"source":"components/count-context.js","original":{"line":15,"column":2}},{"generated":{"line":46,"column":0},"source":"components/count-context.js","original":{"line":16,"column":2}},{"generated":{"line":46,"column":9},"source":"components/count-context.js","original":{"line":16,"column":9}},{"generated":{"line":46,"column":38},"source":"components/count-context.js","original":{"line":16,"column":10}},{"generated":{"line":46,"column":50},"source":"components/count-context.js","original":{"line":16,"column":9}},{"generated":{"line":46,"column":51},"source":"components/count-context.js","original":{"line":16,"column":23}},{"generated":{"line":46,"column":59},"source":"components/count-context.js","original":{"line":16,"column":9}},{"generated":{"line":47,"column":0},"source":"components/count-context.js","original":{"line":16,"column":32}},{"generated":{"line":47,"column":4},"source":"components/count-context.js","original":{"line":16,"column":32}},{"generated":{"line":47,"column":9},"source":"components/count-context.js","original":{"line":16,"column":37}},{"name":"value","generated":{"line":47,"column":11},"source":"components/count-context.js","original":{"line":16,"column":39}},{"generated":{"line":48,"column":0},"source":"components/count-context.js","original":{"line":16,"column":9}},{"name":"props","generated":{"line":48,"column":5},"source":"components/count-context.js","original":{"line":16,"column":50}},{"generated":{"line":48,"column":10},"source":"components/count-context.js","original":{"line":16,"column":9}},{"generated":{"line":48,"column":12},"source":"components/count-context.js","original":{"line":16,"column":2}},{"generated":{"line":49,"column":0},"source":"components/count-context.js","original":{"line":17,"column":1}}],"sources":{"components/count-context.js":"import React, { useState, createContext, useContext, useMemo } from 'react';\r\n\r\nconst CountContext = createContext();\r\n\r\nfunction useCount() {\r\n  const context = useContext(CountContext);\r\n  if (!context) {\r\n    throw new Error(`useCount must be used within a CountProvider`);\r\n  }\r\n  return context;\r\n}\r\n\r\nfunction CountProvider(props) {\r\n  const [count, setCount] = useState(0);\r\n  const value = useMemo(() => [count, setCount], [count]);\r\n  return <CountContext.Provider value={value} {...props} />;\r\n}\r\n\r\nexport { CountProvider, useCount };\r\n"},"lineCount":null}},"error":null,"hash":"c3b2515143b09f03dcd57b94986b78aa","cacheData":{"env":{}}}